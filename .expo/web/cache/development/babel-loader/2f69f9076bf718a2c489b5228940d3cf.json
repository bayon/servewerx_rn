{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/fredrickforte/Documents/developer/github/servewerx/servewerx_rn/screens/RegisterScreen.js\";\n\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { Formik } from \"formik\";\nimport React from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useDispatch } from \"react-redux\";\nimport * as yup from \"yup\";\nimport * as authAction from \"../redux/actions/authAction\";\nimport FormStyles from \"./FormStyles\";\nvar styles = FormStyles;\nvar formSchema = yup.object({\n  fullName: yup.string().required().min(3),\n  email: yup.string().email().required(),\n  password: yup.string().required().min(6)\n});\n\nvar RegisterScreen = function RegisterScreen(navData) {\n  var dispatch = useDispatch();\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, React.createElement(Formik, {\n    initialValues: {\n      fullName: \"\",\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: function onSubmit(values) {\n      console.log(values);\n      dispatch(authAction.registerUser(values)).then(function _callee(result) {\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!result.success) {\n                  _context.next = 12;\n                  break;\n                }\n\n                _context.prev = 1;\n                _context.next = 4;\n                return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"token\", result.token));\n\n              case 4:\n                navData.navigation.navigate(\"Servewerx\");\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](1);\n                console.log(_context.t0);\n\n              case 10:\n                _context.next = 13;\n                break;\n\n              case 12:\n                Alert.alert(\"Registration Failed try again.\");\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[1, 7]], Promise);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    validationSchema: formSchema,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, function (props) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.logo,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, React.createElement(Image, {\n      source: require(\"../assets/icon.png\"),\n      style: styles.image,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    })), React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, React.createElement(TextInput, {\n      style: styles.inputBox,\n      placeholder: \"Full Name\",\n      placeholderTextColor: \"#fff\",\n      onChangeText: props.handleChange(\"fullName\"),\n      value: props.values.fullName,\n      onBlur: props.handleBlur(\"fullName\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }), React.createElement(Text, {\n      style: styles.error,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, props.touched.fullName && props.errors.fullName), React.createElement(TextInput, {\n      style: styles.inputBox,\n      placeholder: \"Email\",\n      placeholderTextColor: \"#fff\",\n      keyboardType: \"email-address\",\n      onChangeText: props.handleChange(\"email\"),\n      value: props.values.email,\n      onBlur: props.handleBlur(\"email\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }), React.createElement(Text, {\n      style: styles.error,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, props.touched.email && props.errors.email), React.createElement(TextInput, {\n      style: styles.inputBox,\n      placeholder: \"Password\",\n      placeholderTextColor: \"#fff\",\n      secureTextEntry: true,\n      onChangeText: props.handleChange(\"password\"),\n      value: props.values.password,\n      onBlur: props.handleBlur(\"password\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }), React.createElement(Text, {\n      style: styles.error,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, props.touched.password && props.errors.password), React.createElement(TouchableOpacity, {\n      style: styles.button,\n      onPress: props.handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }\n    }, \"Register\")), React.createElement(View, {\n      style: styles.registerContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: styles.registerText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 19\n      }\n    }, \"Have an Account?\"), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navData.navigation.navigate(\"Login\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      style: styles.registerButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, \"Login\")))));\n  })));\n};\n\nexport default RegisterScreen;","map":{"version":3,"sources":["/Users/fredrickforte/Documents/developer/github/servewerx/servewerx_rn/screens/RegisterScreen.js"],"names":["AsyncStorage","Formik","React","useDispatch","yup","authAction","FormStyles","styles","formSchema","object","fullName","string","required","min","email","password","RegisterScreen","navData","dispatch","Platform","OS","flex","values","console","log","registerUser","then","result","success","setItem","token","navigation","navigate","Alert","alert","catch","err","props","container","logo","require","image","inputBox","handleChange","handleBlur","error","touched","errors","button","handleSubmit","buttonText","registerContainer","registerText","registerButton"],"mappings":"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","sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\n//npm install formik yup\nimport { Formik } from \"formik\";\nimport React from \"react\";\nimport {\n  Alert,\n  Image,\n  KeyboardAvoidingView,\n  Platform,\n  ScrollView,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View\n} from \"react-native\";\nimport { useDispatch } from \"react-redux\";\nimport * as yup from \"yup\";\nimport * as authAction from \"../redux/actions/authAction\";\nimport FormStyles from \"./FormStyles\";\n\nconst styles = FormStyles;\n\nconst formSchema = yup.object({\n  fullName: yup.string().required().min(3),\n  email: yup.string().email().required(),\n  password: yup.string().required().min(6),\n});\nconst RegisterScreen = (navData) => {\n  const dispatch = useDispatch();\n\n  return (\n    <KeyboardAvoidingView\n      behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n      style={{ flex: 1 }}\n    >\n      <ScrollView>\n        <Formik\n          initialValues={{\n            fullName: \"\",\n            email: \"\",\n            password: \"\",\n          }}\n          onSubmit={(values) => {\n            console.log(values);\n            dispatch(authAction.registerUser(values))\n              .then(async (result) => {\n                if (result.success) {\n                  try {\n                    await AsyncStorage.setItem(\"token\", result.token);\n                    navData.navigation.navigate(\"Servewerx\");\n                  } catch (error) {\n                    console.log(error);\n                  }\n                } else {\n                  Alert.alert(\"Registration Failed try again.\");\n                }\n              })\n              .catch((err) => console.log(err));\n          }}\n          validationSchema={formSchema}\n        >\n          {(props) => (\n            <View style={styles.container}>\n              <View style={styles.logo}>\n                <Image\n                  source={require(\"../assets/icon.png\")}\n                  style={styles.image}\n                />\n              </View>\n              <View>\n                <TextInput\n                  style={styles.inputBox}\n                  placeholder=\"Full Name\"\n                  placeholderTextColor=\"#fff\"\n                  onChangeText={props.handleChange(\"fullName\")}\n                  value={props.values.fullName}\n                  onBlur={props.handleBlur(\"fullName\")}\n                />\n                <Text style={styles.error}>\n                  {props.touched.fullName && props.errors.fullName}\n                </Text>\n\n                <TextInput\n                  style={styles.inputBox}\n                  placeholder=\"Email\"\n                  placeholderTextColor=\"#fff\"\n                  keyboardType=\"email-address\"\n                  onChangeText={props.handleChange(\"email\")}\n                  value={props.values.email}\n                  onBlur={props.handleBlur(\"email\")}\n                />\n                <Text style={styles.error}>\n                  {props.touched.email && props.errors.email}\n                </Text>\n                <TextInput\n                  style={styles.inputBox}\n                  placeholder=\"Password\"\n                  placeholderTextColor=\"#fff\"\n                  secureTextEntry={true}\n                  onChangeText={props.handleChange(\"password\")}\n                  value={props.values.password}\n                  onBlur={props.handleBlur(\"password\")}\n                />\n                <Text style={styles.error}>\n                  {props.touched.password && props.errors.password}\n                </Text>\n                <TouchableOpacity\n                  style={styles.button}\n                  onPress={props.handleSubmit}\n                >\n                  <Text style={styles.buttonText}>Register</Text>\n                </TouchableOpacity>\n                <View style={styles.registerContainer}>\n                  <Text style={styles.registerText}>Have an Account?</Text>\n                  <TouchableOpacity\n                    onPress={() => navData.navigation.navigate(\"Login\")}\n                  >\n                    <Text style={styles.registerButton}>Login</Text>\n                  </TouchableOpacity>\n                </View>\n              </View>\n            </View>\n          )}\n        </Formik>\n      </ScrollView>\n    </KeyboardAvoidingView>\n  );\n};\n\nexport default RegisterScreen;\n\n// import React from 'react';\n// import { Button, Text, View } from 'react-native';\n\n// function RegisterScreen({ navigation }) {\n//     return (\n//       <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n//         <Text>Register Form</Text>\n//         <Text>Already Registered?</Text>\n//         <Button onPress={() => navigation.navigate(\"Home\")} title=\"Login\" />\n//       </View>\n//     );\n//   }\n\n//   export default RegisterScreen;\n"]},"metadata":{},"sourceType":"module"}