{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/fredrickforte/Documents/developer/github/servewerx/servewerx_rn/screens/HomeScreen.js\";\n\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { Formik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useDispatch } from \"react-redux\";\nimport * as yup from \"yup\";\nimport * as authAction from \"../redux/actions/authAction\";\nimport FormStyles from \"./FormStyles\";\nvar formSchema = yup.object({\n  email: yup.string().email().required(),\n  password: yup.string().required().min(6)\n});\nvar styles = FormStyles;\n\nvar HomeScreen = function HomeScreen(navData) {\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      inProgress = _useState2[0],\n      setInProgress = _useState2[1];\n\n  useEffect(function () {\n    setInProgress(false);\n  }, [inProgress]);\n  var auth;\n\n  var loadProfile = function loadProfile() {\n    var token;\n    return _regeneratorRuntime.async(function loadProfile$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log('fn Log Profile ! ');\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"token\"));\n\n          case 3:\n            token = _context2.sent;\n\n            if (!token) {\n              _context2.next = 10;\n              break;\n            }\n\n            auth = true;\n            console.log('auth:', auth);\n            return _context2.abrupt(\"return\", React.createElement(View, {\n              style: styles.container,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 9\n              }\n            }, React.createElement(Text, {\n              style: styles.noticeText,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 11\n              }\n            }, \"You are already logged in.\"), React.createElement(Text, {\n              style: styles.noticeText,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 11\n              }\n            }, \"Do you want to log out?\"), React.createElement(Button, {\n              onPress: function onPress() {\n                return navData.navigation.navigate(\"Logout\");\n              },\n              title: \"Logout\",\n              style: styles.noticeButton,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 11\n              }\n            })));\n\n          case 10:\n            auth = false;\n            return _context2.abrupt(\"return\", React.createElement(KeyboardAvoidingView, {\n              behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n              style: {\n                flex: 1\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 9\n              }\n            }, React.createElement(ScrollView, {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 11\n              }\n            }, React.createElement(Formik, {\n              initialValues: {\n                email: \"\",\n                password: \"\"\n              },\n              validationSchema: formSchema,\n              onSubmit: function onSubmit(values) {\n                console.log(values);\n                setInProgress(true);\n                dispatch(authAction.loginUser(values)).then(function _callee(result) {\n                  return _regeneratorRuntime.async(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          console.log(result);\n\n                          if (!result.success) {\n                            _context.next = 13;\n                            break;\n                          }\n\n                          _context.prev = 2;\n                          _context.next = 5;\n                          return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"token\", result.token));\n\n                        case 5:\n                          navData.navigation.navigate(\"Servewerx\");\n                          _context.next = 11;\n                          break;\n\n                        case 8:\n                          _context.prev = 8;\n                          _context.t0 = _context[\"catch\"](2);\n                          console.log(_context.t0);\n\n                        case 11:\n                          _context.next = 14;\n                          break;\n\n                        case 13:\n                          Alert.alert(result.message);\n\n                        case 14:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, null, null, [[2, 8]], Promise);\n                }).catch(function (err) {\n                  return console.log(err);\n                });\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 13\n              }\n            }, function (props) {\n              return React.createElement(View, {\n                style: styles.container,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 17\n                }\n              }, React.createElement(View, {\n                style: styles.logo,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 19\n                }\n              }, React.createElement(Image, {\n                source: require(\"../assets/servewerx_logo.png\"),\n                style: styles.image,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 21\n                }\n              }), React.createElement(Text, {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 21\n                }\n              }, \"Let 'em know\")), React.createElement(View, {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 19\n                }\n              }, React.createElement(TextInput, {\n                style: styles.inputBox,\n                placeholder: \"Email\",\n                placeholderTextColor: \"#fff\",\n                keyboardType: \"email-address\",\n                onChangeText: props.handleChange(\"email\"),\n                value: props.values.email,\n                onBlur: props.handleBlur(\"email\"),\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 21\n                }\n              }), React.createElement(Text, {\n                style: styles.error,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 21\n                }\n              }, props.touched.email && props.errors.email), React.createElement(TextInput, {\n                style: styles.inputBox,\n                placeholder: \"Password\",\n                placeholderTextColor: \"#fff\",\n                secureTextEntry: true,\n                onChangeText: props.handleChange(\"password\"),\n                value: props.values.password,\n                onBlur: props.handleBlur(\"password\"),\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 21\n                }\n              }), React.createElement(Text, {\n                style: styles.error,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 21\n                }\n              }, props.touched.password && props.errors.password), React.createElement(TouchableOpacity, {\n                style: styles.button,\n                onPress: props.handleSubmit,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 21\n                }\n              }, React.createElement(Text, {\n                style: styles.buttonText,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 23\n                }\n              }, \"Login\")), inProgress && React.createElement(ActivityIndicator, {\n                size: \"small\",\n                color: \"#0000ff\",\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 23\n                }\n              }), React.createElement(View, {\n                style: styles.registerContainer,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 21\n                }\n              }, React.createElement(Text, {\n                style: styles.registerText,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 23\n                }\n              }, \"Don't Have an Account?\"), React.createElement(TouchableOpacity, {\n                onPress: function onPress() {\n                  return navData.navigation.navigate(\"Register\");\n                },\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 23\n                }\n              }, React.createElement(Text, {\n                style: styles.registerButton,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 25\n                }\n              }, \"Register\")))));\n            }))));\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    loadProfile();\n  });\n};\n\nexport default HomeScreen;","map":{"version":3,"sources":["/Users/fredrickforte/Documents/developer/github/servewerx/servewerx_rn/screens/HomeScreen.js"],"names":["AsyncStorage","Formik","React","useEffect","useState","useDispatch","yup","authAction","FormStyles","formSchema","object","email","string","required","password","min","styles","HomeScreen","navData","dispatch","inProgress","setInProgress","auth","loadProfile","console","log","getItem","token","container","noticeText","navigation","navigate","noticeButton","Platform","OS","flex","values","loginUser","then","result","success","setItem","Alert","alert","message","catch","err","props","logo","require","image","inputBox","handleChange","handleBlur","error","touched","errors","button","handleSubmit","buttonText","registerContainer","registerText","registerButton"],"mappings":"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","sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\n//npm install formik yup\nimport { Formik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  ActivityIndicator, Alert,\n  Button, Image,\n  KeyboardAvoidingView,\n  Platform,\n  ScrollView,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View\n} from \"react-native\";\nimport { useDispatch } from \"react-redux\";\nimport * as yup from \"yup\";\nimport * as authAction from \"../redux/actions/authAction\";\nimport FormStyles from \"./FormStyles\";\n\nconst formSchema = yup.object({\n  email: yup.string().email().required(),\n  password: yup.string().required().min(6),\n});\nconst styles = FormStyles;\n\n\n/*\nSVG major pain in the ass for react-native: \nhttps://svgtopng.com/\n\n*/\n\n\n\n\nconst HomeScreen = (navData) => {\n  const dispatch = useDispatch();\n  const [inProgress,setInProgress] = useState(false) ;\n\n  useEffect( () => {\n    setInProgress(false)\n  },[inProgress])\n  var auth;\n  const loadProfile = async () => {\n    console.log('fn Log Profile ! ')\n    const token = await AsyncStorage.getItem(\"token\");\n    if (token) {\n      //const decoded = jwt_decode(token);\n      //make use of decoded data. useState\n     // setFullName(decoded.fullName);\n      //setEmail(decoded.email);\n      //var auth = useSelector((state) => state.auth.authorized);\n      auth = true;\n      console.log('auth:', auth)\n      return (\n        <View style={styles.container}>\n          <Text style={styles.noticeText}>You are already logged in.</Text>\n          <Text style={styles.noticeText}>Do you want to log out?</Text>\n          <Button\n          onPress={() => navData.navigation.navigate(\"Logout\")}\n          title=\"Logout\"\n          style={styles.noticeButton}\n        />\n        </View>\n      );\n    }else {\n      auth = false;\n      return (\n        <KeyboardAvoidingView\n          behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n          style={{ flex: 1 }}\n        >\n          <ScrollView>\n            <Formik\n              initialValues={{\n                email: \"\",\n                password: \"\",\n              }}\n              validationSchema={formSchema}\n              onSubmit={(values) => {\n                console.log(values);\n                setInProgress(true)\n                dispatch(authAction.loginUser(values))\n                  .then(async (result) => {\n                    console.log(result);\n                    if (result.success) {\n                      try {\n                        await AsyncStorage.setItem(\"token\", result.token);\n                        navData.navigation.navigate(\"Servewerx\");\n                      } catch (error) {\n                        console.log(error);\n                      }\n                    } else {\n                      Alert.alert(result.message);\n                    }\n                  })\n                  .catch((err) => console.log(err));\n              }}\n            >\n              {(props) => (\n                <View style={styles.container}>\n                  <View style={styles.logo}>\n                    <Image\n                      source={require(\"../assets/servewerx_logo.png\")}\n                      style={styles.image}\n                    />\n                    <Text>Let 'em know</Text>\n                     \n                    \n    \n                  </View>\n               \n                  <View>\n                    <TextInput\n                      style={styles.inputBox}\n                      placeholder=\"Email\"\n                      placeholderTextColor=\"#fff\"\n                      keyboardType=\"email-address\"\n                      onChangeText={props.handleChange(\"email\")}\n                      value={props.values.email}\n                      onBlur={props.handleBlur(\"email\")}\n                    />\n                    <Text style={styles.error}>\n                      {props.touched.email && props.errors.email}\n                    </Text>\n                    <TextInput\n                      style={styles.inputBox}\n                      placeholder=\"Password\"\n                      placeholderTextColor=\"#fff\"\n                      secureTextEntry={true}\n                      onChangeText={props.handleChange(\"password\")}\n                      value={props.values.password}\n                      onBlur={props.handleBlur(\"password\")}\n                      \n                    />\n                    <Text style={styles.error}>\n                      {props.touched.password && props.errors.password}\n                    </Text>\n    \n                    <TouchableOpacity\n                      style={styles.button}\n                      onPress={props.handleSubmit}\n                    >\n                      <Text style={styles.buttonText}>Login</Text>\n                    </TouchableOpacity>\n    \n                    { inProgress && \n                      <ActivityIndicator size=\"small\" color=\"#0000ff\" />\n                       \n                    }\n                   \n    \n                    <View style={styles.registerContainer}>\n                      <Text style={styles.registerText}>\n                        Don't Have an Account?\n                      </Text>\n                       \n                      <TouchableOpacity\n                        onPress={() => navData.navigation.navigate(\"Register\")}\n                      >\n    \n                        <Text style={styles.registerButton}>Register</Text>\n                      </TouchableOpacity>\n                    </View>\n                  </View>\n                </View>\n              )}\n            </Formik>\n          </ScrollView>\n        </KeyboardAvoidingView>\n      );\n    }\n  };\n\n  useEffect(() => {\n    loadProfile();\n  });\n\n\n\n\n\n  // // Check if already logged in.\n  // //var auth = useSelector((state) => state.auth.authorized);\n  // console.log('auth: at condition:',auth)\n  // if (auth) {\n  //   return (\n  //     <View style={styles.container}>\n  //       <Text style={styles.noticeText}>You are already logged in.</Text>\n  //       <Text style={styles.noticeText}>Do you want to log out?</Text>\n  //       <Button\n  //       onPress={() => navData.navigation.navigate(\"Logout\")}\n  //       title=\"Logout\"\n  //       style={styles.noticeButton}\n  //     />\n  //     </View>\n  //   );\n  // }\n\n  \n};\n\nexport default HomeScreen;\n "]},"metadata":{},"sourceType":"module"}