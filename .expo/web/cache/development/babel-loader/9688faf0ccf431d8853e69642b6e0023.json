{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/fredrickforte/Documents/developer/github/servewerx/servewerx_rn/screens/HomeScreen.js\";\n\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { Formik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useDispatch } from \"react-redux\";\nimport * as yup from \"yup\";\nimport * as authAction from \"../redux/actions/authAction\";\nimport FormStyles from \"./FormStyles\";\nvar formSchema = yup.object({\n  email: yup.string().email().required(),\n  password: yup.string().required().min(6)\n});\nvar styles = FormStyles;\n\nvar HomeScreen = function HomeScreen(navData) {\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      inProgress = _useState2[0],\n      setInProgress = _useState2[1];\n\n  useEffect(function () {\n    setInProgress(false);\n  }, [inProgress]);\n  var auth = false;\n\n  var loadProfile = function loadProfile() {\n    var token;\n    return _regeneratorRuntime.async(function loadProfile$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('fn Log Profile ! ');\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"token\"));\n\n          case 3:\n            token = _context.sent;\n\n            if (token) {\n              auth = true;\n              console.log('auth:', auth);\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    loadProfile();\n  }, [auth]);\n  console.log('auth: at condition:', auth);\n\n  if (auth) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: styles.noticeText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, \"You are already logged in.\"), React.createElement(Text, {\n      style: styles.noticeText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, \"Do you want to log out?\"), React.createElement(Button, {\n      onPress: function onPress() {\n        return navData.navigation.navigate(\"Logout\");\n      },\n      title: \"Logout\",\n      style: styles.noticeButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, React.createElement(Formik, {\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema: formSchema,\n    onSubmit: function onSubmit(values) {\n      console.log(values);\n      setInProgress(true);\n      dispatch(authAction.loginUser(values)).then(function _callee(result) {\n        return _regeneratorRuntime.async(function _callee$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                console.log(result);\n\n                if (!result.success) {\n                  _context2.next = 13;\n                  break;\n                }\n\n                _context2.prev = 2;\n                _context2.next = 5;\n                return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"token\", result.token));\n\n              case 5:\n                navData.navigation.navigate(\"Servewerx\");\n                _context2.next = 11;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](2);\n                console.log(_context2.t0);\n\n              case 11:\n                _context2.next = 14;\n                break;\n\n              case 13:\n                Alert.alert(result.message);\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, [[2, 8]], Promise);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, function (props) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.logo,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, React.createElement(Image, {\n      source: require(\"../assets/servewerx_logo.png\"),\n      style: styles.image,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, \"Let 'em know\"), inProgress && React.createElement(ActivityIndicator, {\n      size: \"small\",\n      color: \"#0000ff\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }\n    })), React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, React.createElement(TextInput, {\n      style: styles.inputBox,\n      placeholder: \"Email\",\n      placeholderTextColor: \"#fff\",\n      keyboardType: \"email-address\",\n      onChangeText: props.handleChange(\"email\"),\n      value: props.values.email,\n      onBlur: props.handleBlur(\"email\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }), React.createElement(Text, {\n      style: styles.error,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, props.touched.email && props.errors.email), React.createElement(TextInput, {\n      style: styles.inputBox,\n      placeholder: \"Password\",\n      placeholderTextColor: \"#fff\",\n      secureTextEntry: true,\n      onChangeText: props.handleChange(\"password\"),\n      value: props.values.password,\n      onBlur: props.handleBlur(\"password\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }), React.createElement(Text, {\n      style: styles.error,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }, props.touched.password && props.errors.password), React.createElement(TouchableOpacity, {\n      style: styles.button,\n      onPress: props.handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 19\n      }\n    }, \"Login\")), React.createElement(View, {\n      style: styles.registerContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: styles.registerText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 19\n      }\n    }, \"Don't Have an Account?\"), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navData.navigation.navigate(\"Register\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      style: styles.registerButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    }, \"Register\")))));\n  })));\n};\n\nexport default HomeScreen;","map":{"version":3,"sources":["/Users/fredrickforte/Documents/developer/github/servewerx/servewerx_rn/screens/HomeScreen.js"],"names":["AsyncStorage","Formik","React","useEffect","useState","useDispatch","yup","authAction","FormStyles","formSchema","object","email","string","required","password","min","styles","HomeScreen","navData","dispatch","inProgress","setInProgress","auth","loadProfile","console","log","getItem","token","container","noticeText","navigation","navigate","noticeButton","Platform","OS","flex","values","loginUser","then","result","success","setItem","Alert","alert","message","catch","err","props","logo","require","image","inputBox","handleChange","handleBlur","error","touched","errors","button","handleSubmit","buttonText","registerContainer","registerText","registerButton"],"mappings":"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","sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\n//npm install formik yup\nimport { Formik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  ActivityIndicator, Alert,\n  Button, Image,\n  KeyboardAvoidingView,\n  Platform,\n  ScrollView,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View\n} from \"react-native\";\nimport { useDispatch } from \"react-redux\";\nimport * as yup from \"yup\";\nimport * as authAction from \"../redux/actions/authAction\";\nimport FormStyles from \"./FormStyles\";\n\nconst formSchema = yup.object({\n  email: yup.string().email().required(),\n  password: yup.string().required().min(6),\n});\nconst styles = FormStyles;\n\n \nconst HomeScreen = (navData) => {\n  const dispatch = useDispatch();\n  const [inProgress,setInProgress] = useState(false) ;\n\n  useEffect( () => {\n    setInProgress(false)\n  },[inProgress])\n  var auth = false;\n  const loadProfile = async () => {\n    console.log('fn Log Profile ! ')\n    const token = await AsyncStorage.getItem(\"token\");\n    if (token) {\n      //const decoded = jwt_decode(token);\n      //make use of decoded data. useState\n     // setFullName(decoded.fullName);\n      //setEmail(decoded.email);\n      //var auth = useSelector((state) => state.auth.authorized);\n      auth = true;\n      console.log('auth:', auth)\n    }\n  };\n\n  useEffect(() => {\n    loadProfile();\n  },[auth]);\n\n\n\n\n\n  // Check if already logged in.\n  //var auth = useSelector((state) => state.auth.authorized);\n  console.log('auth: at condition:',auth)\n  if (auth) {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.noticeText}>You are already logged in.</Text>\n        <Text style={styles.noticeText}>Do you want to log out?</Text>\n        <Button\n        onPress={() => navData.navigation.navigate(\"Logout\")}\n        title=\"Logout\"\n        style={styles.noticeButton}\n      />\n      </View>\n    );\n  }\n\n  return (\n    <KeyboardAvoidingView\n      behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n      style={{ flex: 1 }}\n    >\n      <ScrollView>\n        <Formik\n          initialValues={{\n            email: \"\",\n            password: \"\",\n          }}\n          validationSchema={formSchema}\n          onSubmit={(values) => {\n            console.log(values);\n            setInProgress(true)\n            dispatch(authAction.loginUser(values))\n              .then(async (result) => {\n                console.log(result);\n                if (result.success) {\n                  try {\n                    await AsyncStorage.setItem(\"token\", result.token);\n                    navData.navigation.navigate(\"Servewerx\");\n                  } catch (error) {\n                    console.log(error);\n                  }\n                } else {\n                  Alert.alert(result.message);\n                }\n              })\n              .catch((err) => console.log(err));\n          }}\n        >\n          {(props) => (\n            <View style={styles.container}>\n              <View style={styles.logo}>\n                <Image\n                  source={require(\"../assets/servewerx_logo.png\")}\n                  style={styles.image}\n                />\n                <Text>Let 'em know</Text>\n                 \n                { inProgress && \n                  <ActivityIndicator size=\"small\" color=\"#0000ff\" />\n                   \n                }\n\n              </View>\n           \n              <View>\n                <TextInput\n                  style={styles.inputBox}\n                  placeholder=\"Email\"\n                  placeholderTextColor=\"#fff\"\n                  keyboardType=\"email-address\"\n                  onChangeText={props.handleChange(\"email\")}\n                  value={props.values.email}\n                  onBlur={props.handleBlur(\"email\")}\n                />\n                <Text style={styles.error}>\n                  {props.touched.email && props.errors.email}\n                </Text>\n                <TextInput\n                  style={styles.inputBox}\n                  placeholder=\"Password\"\n                  placeholderTextColor=\"#fff\"\n                  secureTextEntry={true}\n                  onChangeText={props.handleChange(\"password\")}\n                  value={props.values.password}\n                  onBlur={props.handleBlur(\"password\")}\n                  \n                />\n                <Text style={styles.error}>\n                  {props.touched.password && props.errors.password}\n                </Text>\n\n                <TouchableOpacity\n                  style={styles.button}\n                  onPress={props.handleSubmit}\n                >\n                  <Text style={styles.buttonText}>Login</Text>\n                </TouchableOpacity>\n\n               \n               \n\n                <View style={styles.registerContainer}>\n                  <Text style={styles.registerText}>\n                    Don't Have an Account?\n                  </Text>\n                   \n                  <TouchableOpacity\n                    onPress={() => navData.navigation.navigate(\"Register\")}\n                  >\n\n                    <Text style={styles.registerButton}>Register</Text>\n                  </TouchableOpacity>\n                </View>\n              </View>\n            </View>\n          )}\n        </Formik>\n      </ScrollView>\n    </KeyboardAvoidingView>\n  );\n};\n\nexport default HomeScreen;\n "]},"metadata":{},"sourceType":"module"}