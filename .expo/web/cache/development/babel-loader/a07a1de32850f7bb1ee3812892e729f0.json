{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport React from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useDispatch } from 'react-redux';\nimport * as authAction from \"../redux/actions/authAction\";\nimport FormStyles from \"./FormStyles\";\nvar styles = FormStyles;\n\nfunction LogoutScreen(_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useDispatch();\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: styles.noticeText\n  }, \"Are you sure you want to Logout?\"), React.createElement(Button, {\n    title: \"Logout\",\n    onPress: function onPress() {\n      dispatch(authAction.logoutUser()).then(function _callee(result) {\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(result);\n                _context.prev = 1;\n                _context.next = 4;\n                return _regeneratorRuntime.awrap(AsyncStorage.removeItem(\"token\"));\n\n              case 4:\n                console.log(\"success ? \");\n                navigation.navigate(\"Home\");\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](1);\n                console.log(_context.t0);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[1, 8]], Promise);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    style: styles.noticeButton\n  }));\n}\n\nexport default LogoutScreen;","map":{"version":3,"sources":["/Users/fredrickforte/Documents/developer/github/servewerx/deep/servewerx_rn/screens/LogoutScreen.js"],"names":["AsyncStorage","React","useDispatch","authAction","FormStyles","styles","LogoutScreen","navigation","dispatch","container","noticeText","logoutUser","then","result","console","log","removeItem","navigate","catch","err","noticeButton"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,2CAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,KAAKC,UAAZ;AACA,OAAOC,UAAP;AAEA,IAAMC,MAAM,GAAGD,UAAf;;AAEA,SAASE,YAAT,OAAoC;AAAA,MAAbC,UAAa,QAAbA,UAAa;AAClC,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAIA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACI;AAApB,KAEG,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK;AAApB,wCAFH,EAGE,oBAAC,MAAD;AACA,IAAA,KAAK,EAAC,QADN;AAEA,IAAA,OAAO,EAAG,mBAAM;AAEdF,MAAAA,QAAQ,CAACL,UAAU,CAACQ,UAAX,EAAD,CAAR,CACCC,IADD,CACM,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AACJC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AADI;AAAA;AAAA,iDAGIb,YAAY,CAACgB,UAAb,CAAwB,OAAxB,CAHJ;;AAAA;AAIFF,gBAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAR,gBAAAA,UAAU,CAACU,QAAX,CAAoB,MAApB;AALE;AAAA;;AAAA;AAAA;AAAA;AAOFH,gBAAAA,OAAO,CAACC,GAAR;;AAPE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADN,EAWCG,KAXD,CAWO,UAACC,GAAD;AAAA,eAASL,OAAO,CAACC,GAAR,CAAYI,GAAZ,CAAT;AAAA,OAXP;AAYD,KAhBD;AAmBA,IAAA,KAAK,EAAEd,MAAM,CAACe;AAnBd,IAHF,CADF;AA2BD;;AACD,eAAed,YAAf","sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport React from \"react\";\nimport { Button, Text, View } from \"react-native\";\nimport { useDispatch } from 'react-redux';\nimport * as authAction from \"../redux/actions/authAction\";\nimport FormStyles from \"./FormStyles\";\n\nconst styles = FormStyles;\n\nfunction LogoutScreen({navigation}) {\n  const dispatch = useDispatch();\n \n  //TODO: need to make auth action to set authorized to false...and remove token from storage.\n  // Then offer direction back to login again.\n  return (\n    <View style={styles.container}>\n      \n       <Text style={styles.noticeText}>Are you sure you want to Logout?</Text>\n      <Button \n      title=\"Logout\"\n      onPress={ () => {\n        \n        dispatch(authAction.logoutUser())\n        .then(async (result) => {\n          console.log(result);\n          try {\n            await AsyncStorage.removeItem(\"token\");\n            console.log(\"success ? \")\n            navigation.navigate(\"Home\");\n          } catch (error) {\n            console.log(error);\n          }\n        })\n        .catch((err) => console.log(err));\n      }\n     \n      }\n      style={styles.noticeButton}\n      />\n    </View>\n  );\n}\nexport default LogoutScreen;\n"]},"metadata":{},"sourceType":"module"}