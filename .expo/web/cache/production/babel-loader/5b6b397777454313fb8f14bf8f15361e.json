{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import AsyncStorage from\"@react-native-async-storage/async-storage\";import{Formik}from\"formik\";import React from\"react\";import Alert from\"react-native-web/dist/exports/Alert\";import Image from\"react-native-web/dist/exports/Image\";import KeyboardAvoidingView from\"react-native-web/dist/exports/KeyboardAvoidingView\";import Platform from\"react-native-web/dist/exports/Platform\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import Text from\"react-native-web/dist/exports/Text\";import TextInput from\"react-native-web/dist/exports/TextInput\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import View from\"react-native-web/dist/exports/View\";import{useDispatch}from\"react-redux\";import*as yup from\"yup\";import*as authAction from\"../redux/actions/authAction\";import FormStyles from\"./FormStyles\";var styles=FormStyles;var formSchema=yup.object({fullName:yup.string().required().min(3),email:yup.string().email().required(),password:yup.string().required().min(6)});var RegisterScreen=function RegisterScreen(navData){var dispatch=useDispatch();return React.createElement(KeyboardAvoidingView,{behavior:Platform.OS===\"ios\"?\"padding\":\"height\",style:{flex:1}},React.createElement(ScrollView,null,React.createElement(Formik,{initialValues:{fullName:\"\",email:\"\",password:\"\"},onSubmit:function onSubmit(values){console.log(values);dispatch(authAction.registerUser(values)).then(function _callee(result){return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!result.success){_context.next=12;break;}_context.prev=1;_context.next=4;return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"token\",result.token));case 4:navData.navigation.navigate(\"Bayon\");_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](1);console.log(_context.t0);case 10:_context.next=13;break;case 12:Alert.alert(\"Registration Failed try again.\");case 13:case\"end\":return _context.stop();}}},null,null,[[1,7]],Promise);}).catch(function(err){return console.log(err);});},validationSchema:formSchema},function(props){return React.createElement(View,{style:styles.container},React.createElement(View,{style:styles.logo},React.createElement(Image,{source:require(\"../assets/bayon_forte.jpg\"),style:styles.image})),React.createElement(View,null,React.createElement(TextInput,{style:styles.inputBox,placeholder:\"Full Name\",placeholderTextColor:\"#fff\",onChangeText:props.handleChange(\"fullName\"),value:props.values.fullName,onBlur:props.handleBlur(\"fullName\")}),React.createElement(Text,{style:styles.error},props.touched.fullName&&props.errors.fullName),React.createElement(TextInput,{style:styles.inputBox,placeholder:\"Email\",placeholderTextColor:\"#fff\",keyboardType:\"email-address\",onChangeText:props.handleChange(\"email\"),value:props.values.email,onBlur:props.handleBlur(\"email\")}),React.createElement(Text,{style:styles.error},props.touched.email&&props.errors.email),React.createElement(TextInput,{style:styles.inputBox,placeholder:\"Password\",placeholderTextColor:\"#fff\",secureTextEntry:true,onChangeText:props.handleChange(\"password\"),value:props.values.password,onBlur:props.handleBlur(\"password\")}),React.createElement(Text,{style:styles.error},props.touched.password&&props.errors.password),React.createElement(TouchableOpacity,{style:styles.button,onPress:props.handleSubmit},React.createElement(Text,{style:styles.buttonText},\"Register\")),React.createElement(View,{style:styles.registerContainer},React.createElement(Text,{style:styles.registerText},\"Have an Account?\"),React.createElement(TouchableOpacity,{onPress:function onPress(){return navData.navigation.navigate(\"Login\");}},React.createElement(Text,{style:styles.registerButton},\"Login\")))));})));};export default RegisterScreen;","map":{"version":3,"sources":["/Users/fredrickforte/Documents/developer/github/servewerx/servewerx_nav_shell/screens/RegisterScreen.js"],"names":["AsyncStorage","Formik","React","useDispatch","yup","authAction","FormStyles","styles","formSchema","object","fullName","string","required","min","email","password","RegisterScreen","navData","dispatch","Platform","OS","flex","values","console","log","registerUser","then","result","success","setItem","token","navigation","navigate","Alert","alert","catch","err","props","container","logo","require","image","inputBox","handleChange","handleBlur","error","touched","errors","button","handleSubmit","buttonText","registerContainer","registerText","registerButton"],"mappings":"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","sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\n//npm install formik yup\nimport { Formik } from \"formik\";\nimport React from \"react\";\nimport {\n  Alert,\n  Image,\n  KeyboardAvoidingView,\n  Platform,\n  ScrollView,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View\n} from \"react-native\";\nimport { useDispatch } from \"react-redux\";\nimport * as yup from \"yup\";\nimport * as authAction from \"../redux/actions/authAction\";\nimport FormStyles from \"./FormStyles\";\n\nconst styles = FormStyles;\n\nconst formSchema = yup.object({\n  fullName: yup.string().required().min(3),\n  email: yup.string().email().required(),\n  password: yup.string().required().min(6),\n});\nconst RegisterScreen = (navData) => {\n  const dispatch = useDispatch();\n\n  return (\n    <KeyboardAvoidingView\n      behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n      style={{ flex: 1 }}\n    >\n      <ScrollView>\n        <Formik\n          initialValues={{\n            fullName: \"\",\n            email: \"\",\n            password: \"\",\n          }}\n          onSubmit={(values) => {\n            console.log(values);\n            dispatch(authAction.registerUser(values))\n              .then(async (result) => {\n                if (result.success) {\n                  try {\n                    await AsyncStorage.setItem(\"token\", result.token);\n                    navData.navigation.navigate(\"Bayon\");\n                  } catch (error) {\n                    console.log(error);\n                  }\n                } else {\n                  Alert.alert(\"Registration Failed try again.\");\n                }\n              })\n              .catch((err) => console.log(err));\n          }}\n          validationSchema={formSchema}\n        >\n          {(props) => (\n            <View style={styles.container}>\n              <View style={styles.logo}>\n                <Image\n                  source={require(\"../assets/bayon_forte.jpg\")}\n                  style={styles.image}\n                />\n              </View>\n              <View>\n                <TextInput\n                  style={styles.inputBox}\n                  placeholder=\"Full Name\"\n                  placeholderTextColor=\"#fff\"\n                  onChangeText={props.handleChange(\"fullName\")}\n                  value={props.values.fullName}\n                  onBlur={props.handleBlur(\"fullName\")}\n                />\n                <Text style={styles.error}>\n                  {props.touched.fullName && props.errors.fullName}\n                </Text>\n\n                <TextInput\n                  style={styles.inputBox}\n                  placeholder=\"Email\"\n                  placeholderTextColor=\"#fff\"\n                  keyboardType=\"email-address\"\n                  onChangeText={props.handleChange(\"email\")}\n                  value={props.values.email}\n                  onBlur={props.handleBlur(\"email\")}\n                />\n                <Text style={styles.error}>\n                  {props.touched.email && props.errors.email}\n                </Text>\n                <TextInput\n                  style={styles.inputBox}\n                  placeholder=\"Password\"\n                  placeholderTextColor=\"#fff\"\n                  secureTextEntry={true}\n                  onChangeText={props.handleChange(\"password\")}\n                  value={props.values.password}\n                  onBlur={props.handleBlur(\"password\")}\n                />\n                <Text style={styles.error}>\n                  {props.touched.password && props.errors.password}\n                </Text>\n                <TouchableOpacity\n                  style={styles.button}\n                  onPress={props.handleSubmit}\n                >\n                  <Text style={styles.buttonText}>Register</Text>\n                </TouchableOpacity>\n                <View style={styles.registerContainer}>\n                  <Text style={styles.registerText}>Have an Account?</Text>\n                  <TouchableOpacity\n                    onPress={() => navData.navigation.navigate(\"Login\")}\n                  >\n                    <Text style={styles.registerButton}>Login</Text>\n                  </TouchableOpacity>\n                </View>\n              </View>\n            </View>\n          )}\n        </Formik>\n      </ScrollView>\n    </KeyboardAvoidingView>\n  );\n};\n\nexport default RegisterScreen;\n\n// import React from 'react';\n// import { Button, Text, View } from 'react-native';\n\n// function RegisterScreen({ navigation }) {\n//     return (\n//       <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n//         <Text>Register Form</Text>\n//         <Text>Already Registered?</Text>\n//         <Button onPress={() => navigation.navigate(\"Home\")} title=\"Login\" />\n//       </View>\n//     );\n//   }\n\n//   export default RegisterScreen;\n"]},"metadata":{},"sourceType":"module"}