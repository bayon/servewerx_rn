{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import AsyncStorage from\"@react-native-async-storage/async-storage\";import{Formik}from\"formik\";import React from\"react\";import Alert from\"react-native-web/dist/exports/Alert\";import Button from\"react-native-web/dist/exports/Button\";import Image from\"react-native-web/dist/exports/Image\";import KeyboardAvoidingView from\"react-native-web/dist/exports/KeyboardAvoidingView\";import Platform from\"react-native-web/dist/exports/Platform\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import Text from\"react-native-web/dist/exports/Text\";import TextInput from\"react-native-web/dist/exports/TextInput\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import View from\"react-native-web/dist/exports/View\";import{useDispatch,useSelector}from\"react-redux\";import*as yup from\"yup\";import*as authAction from\"../redux/actions/authAction\";import FormStyles from\"./FormStyles\";var formSchema=yup.object({email:yup.string().email().required(),password:yup.string().required().min(6)});var styles=FormStyles;var HomeScreen=function HomeScreen(navData){var dispatch=useDispatch();var auth=useSelector(function(state){return state.auth.authorized;});if(auth){return React.createElement(View,{style:styles.container},React.createElement(Text,{style:styles.noticeText},\"You are already logged in.\"),React.createElement(Text,{style:styles.noticeText},\"Do you want to log out?\"),React.createElement(Button,{onPress:function onPress(){return navData.navigation.navigate(\"Logout\");},title:\"Logout\",style:styles.noticeButton}));}return React.createElement(KeyboardAvoidingView,{behavior:Platform.OS===\"ios\"?\"padding\":\"height\",style:{flex:1}},React.createElement(ScrollView,null,React.createElement(Formik,{initialValues:{email:\"\",password:\"\"},validationSchema:formSchema,onSubmit:function onSubmit(values){console.log(values);dispatch(authAction.loginUser(values)).then(function _callee(result){return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(result);if(!result.success){_context.next=13;break;}_context.prev=2;_context.next=5;return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"token\",result.token));case 5:navData.navigation.navigate(\"Servewerx\");_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](2);console.log(_context.t0);case 11:_context.next=14;break;case 13:Alert.alert(result.message);case 14:case\"end\":return _context.stop();}}},null,null,[[2,8]],Promise);}).catch(function(err){return console.log(err);});}},function(props){return React.createElement(View,{style:styles.container},React.createElement(View,{style:styles.logo},React.createElement(Image,{source:require(\"../assets/icon.png\"),style:styles.image})),React.createElement(View,null,React.createElement(TextInput,{style:styles.inputBox,placeholder:\"Email\",placeholderTextColor:\"#fff\",keyboardType:\"email-address\",onChangeText:props.handleChange(\"email\"),value:props.values.email,onBlur:props.handleBlur(\"email\")}),React.createElement(Text,{style:styles.error},props.touched.email&&props.errors.email),React.createElement(TextInput,{style:styles.inputBox,placeholder:\"Password\",placeholderTextColor:\"#fff\",secureTextEntry:true,onChangeText:props.handleChange(\"password\"),value:props.values.password,onBlur:props.handleBlur(\"password\")}),React.createElement(Text,{style:styles.error},props.touched.password&&props.errors.password),React.createElement(TouchableOpacity,{style:styles.button,onPress:props.handleSubmit},React.createElement(Text,{style:styles.buttonText},\"Login\")),React.createElement(View,{style:styles.registerContainer},React.createElement(Text,{style:styles.registerText},\"Don't Have an Account?\"),React.createElement(TouchableOpacity,{onPress:function onPress(){return navData.navigation.navigate(\"Register\");}},React.createElement(Text,{style:styles.registerButton},\"Register\")))));})));};export default HomeScreen;","map":{"version":3,"sources":["/Users/fredrickforte/Documents/developer/github/servewerx/deep/servewerx_rn/screens/HomeScreen.js"],"names":["AsyncStorage","Formik","React","useDispatch","useSelector","yup","authAction","FormStyles","formSchema","object","email","string","required","password","min","styles","HomeScreen","navData","dispatch","auth","state","authorized","container","noticeText","navigation","navigate","noticeButton","Platform","OS","flex","values","console","log","loginUser","then","result","success","setItem","token","Alert","alert","message","catch","err","props","logo","require","image","inputBox","handleChange","handleBlur","error","touched","errors","button","handleSubmit","buttonText","registerContainer","registerText","registerButton"],"mappings":"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","sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\n//npm install formik yup\nimport { Formik } from \"formik\";\nimport React from \"react\";\nimport {\n  Alert,\n  Button, Image,\n  KeyboardAvoidingView,\n  Platform,\n  ScrollView,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View\n} from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as yup from \"yup\";\nimport * as authAction from \"../redux/actions/authAction\";\nimport FormStyles from \"./FormStyles\";\n\nconst formSchema = yup.object({\n  email: yup.string().email().required(),\n  password: yup.string().required().min(6),\n});\n\nconst styles = FormStyles;\n\nconst HomeScreen = (navData) => {\n  const dispatch = useDispatch();\n\n  // Check if already logged in.\n  var auth = useSelector((state) => state.auth.authorized);\n  if (auth) {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.noticeText}>You are already logged in.</Text>\n        <Text style={styles.noticeText}>Do you want to log out?</Text>\n        <Button\n        onPress={() => navData.navigation.navigate(\"Logout\")}\n        title=\"Logout\"\n        style={styles.noticeButton}\n      />\n      </View>\n    );\n  }\n\n  return (\n    <KeyboardAvoidingView\n      behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n      style={{ flex: 1 }}\n    >\n      <ScrollView>\n        <Formik\n          initialValues={{\n            email: \"\",\n            password: \"\",\n          }}\n          validationSchema={formSchema}\n          onSubmit={(values) => {\n            console.log(values);\n            dispatch(authAction.loginUser(values))\n              .then(async (result) => {\n                console.log(result);\n                if (result.success) {\n                  try {\n                    await AsyncStorage.setItem(\"token\", result.token);\n                    navData.navigation.navigate(\"Servewerx\");\n                  } catch (error) {\n                    console.log(error);\n                  }\n                } else {\n                  Alert.alert(result.message);\n                }\n              })\n              .catch((err) => console.log(err));\n          }}\n        >\n          {(props) => (\n            <View style={styles.container}>\n              <View style={styles.logo}>\n                <Image\n                  source={require(\"../assets/icon.png\")}\n                  style={styles.image}\n                />\n              </View>\n              <View>\n                <TextInput\n                  style={styles.inputBox}\n                  placeholder=\"Email\"\n                  placeholderTextColor=\"#fff\"\n                  keyboardType=\"email-address\"\n                  onChangeText={props.handleChange(\"email\")}\n                  value={props.values.email}\n                  onBlur={props.handleBlur(\"email\")}\n                />\n                <Text style={styles.error}>\n                  {props.touched.email && props.errors.email}\n                </Text>\n                <TextInput\n                  style={styles.inputBox}\n                  placeholder=\"Password\"\n                  placeholderTextColor=\"#fff\"\n                  secureTextEntry={true}\n                  onChangeText={props.handleChange(\"password\")}\n                  value={props.values.password}\n                  onBlur={props.handleBlur(\"password\")}\n                  \n                />\n                <Text style={styles.error}>\n                  {props.touched.password && props.errors.password}\n                </Text>\n\n                <TouchableOpacity\n                  style={styles.button}\n                  onPress={props.handleSubmit}\n                >\n                  <Text style={styles.buttonText}>Login</Text>\n                </TouchableOpacity>\n                <View style={styles.registerContainer}>\n                  <Text style={styles.registerText}>\n                    Don't Have an Account?\n                  </Text>\n                  <TouchableOpacity\n                    onPress={() => navData.navigation.navigate(\"Register\")}\n                  >\n                    <Text style={styles.registerButton}>Register</Text>\n                  </TouchableOpacity>\n                </View>\n              </View>\n            </View>\n          )}\n        </Formik>\n      </ScrollView>\n    </KeyboardAvoidingView>\n  );\n};\n\nexport default HomeScreen;\n "]},"metadata":{},"sourceType":"module"}