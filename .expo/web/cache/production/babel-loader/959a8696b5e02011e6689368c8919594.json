{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import AsyncStorage from\"@react-native-async-storage/async-storage\";import React from\"react\";import Button from\"react-native-web/dist/exports/Button\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import{useDispatch}from'react-redux';import*as authAction from\"../redux/actions/authAction\";import FormStyles from\"./FormStyles\";var styles=FormStyles;function LogoutScreen(_ref){var navigation=_ref.navigation;var dispatch=useDispatch();return React.createElement(View,{style:styles.container},React.createElement(Text,{style:styles.noticeText},\"Are you sure you want to Logout?\"),React.createElement(Button,{title:\"Logout\",onPress:function onPress(){dispatch(authAction.logoutUser()).then(function _callee(result){return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(result);_context.prev=1;_context.next=4;return _regeneratorRuntime.awrap(AsyncStorage.removeItem(\"token\"));case 4:console.log(\"success ? \");navigation.navigate(\"Home\");_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);console.log(_context.t0);case 11:case\"end\":return _context.stop();}}},null,null,[[1,8]],Promise);}).catch(function(err){return console.log(err);});},style:styles.noticeButton}));}export default LogoutScreen;","map":{"version":3,"sources":["/Users/fredrickforte/Documents/developer/github/servewerx/deep/servewerx_rn/screens/LogoutScreen.js"],"names":["AsyncStorage","React","useDispatch","authAction","FormStyles","styles","LogoutScreen","navigation","dispatch","container","noticeText","logoutUser","then","result","console","log","removeItem","navigate","catch","err","noticeButton"],"mappings":"4DAAA,MAAOA,CAAAA,YAAP,KAAyB,2CAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,mKAEA,OAASC,WAAT,KAA4B,aAA5B,CACA,MAAO,GAAKC,CAAAA,UAAZ,mCACA,MAAOC,CAAAA,UAAP,oBAEA,GAAMC,CAAAA,MAAM,CAAGD,UAAf,CAEA,QAASE,CAAAA,YAAT,MAAoC,IAAbC,CAAAA,UAAa,MAAbA,UAAa,CAClC,GAAMC,CAAAA,QAAQ,CAAGN,WAAW,EAA5B,CAIA,MACE,qBAAC,IAAD,EAAM,KAAK,CAAEG,MAAM,CAACI,SAApB,EAEG,oBAAC,IAAD,EAAM,KAAK,CAAEJ,MAAM,CAACK,UAApB,qCAFH,CAGE,oBAAC,MAAD,EACA,KAAK,CAAC,QADN,CAEA,OAAO,CAAG,kBAAM,CAEdF,QAAQ,CAACL,UAAU,CAACQ,UAAX,EAAD,CAAR,CACCC,IADD,CACM,iBAAOC,MAAP,mHACJC,OAAO,CAACC,GAAR,CAAYF,MAAZ,EADI,iEAGIb,YAAY,CAACgB,UAAb,CAAwB,OAAxB,CAHJ,SAIFF,OAAO,CAACC,GAAR,CAAY,YAAZ,EACAR,UAAU,CAACU,QAAX,CAAoB,MAApB,EALE,+EAOFH,OAAO,CAACC,GAAR,cAPE,yEADN,EAWCG,KAXD,CAWO,SAACC,GAAD,QAASL,CAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ,CAAT,EAXP,EAYD,CAhBD,CAmBA,KAAK,CAAEd,MAAM,CAACe,YAnBd,EAHF,CADF,CA2BD,CACD,cAAed,CAAAA,YAAf","sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport React from \"react\";\nimport { Button, Text, View } from \"react-native\";\nimport { useDispatch } from 'react-redux';\nimport * as authAction from \"../redux/actions/authAction\";\nimport FormStyles from \"./FormStyles\";\n\nconst styles = FormStyles;\n\nfunction LogoutScreen({navigation}) {\n  const dispatch = useDispatch();\n \n  //TODO: need to make auth action to set authorized to false...and remove token from storage.\n  // Then offer direction back to login again.\n  return (\n    <View style={styles.container}>\n      \n       <Text style={styles.noticeText}>Are you sure you want to Logout?</Text>\n      <Button \n      title=\"Logout\"\n      onPress={ () => {\n        \n        dispatch(authAction.logoutUser())\n        .then(async (result) => {\n          console.log(result);\n          try {\n            await AsyncStorage.removeItem(\"token\");\n            console.log(\"success ? \")\n            navigation.navigate(\"Home\");\n          } catch (error) {\n            console.log(error);\n          }\n        })\n        .catch((err) => console.log(err));\n      }\n     \n      }\n      style={styles.noticeButton}\n      />\n    </View>\n  );\n}\nexport default LogoutScreen;\n"]},"metadata":{},"sourceType":"module"}