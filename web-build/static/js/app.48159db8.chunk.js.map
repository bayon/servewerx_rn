{"version":3,"sources":["assets/icon.png","redux/actions/authAction.js","redux/reducers/authReducer.js","redux/reducers/statusReducer.js","redux/store.js","redux/actions/statusAction.js","screens/FormStyles.js","screens/ui_components/Card.js","screens/ExperienceScreen.js","screens/HomeScreen.js","screens/LogoutScreen.js","screens/RegisterScreen.js","screens/SkillsScreen.js","App.js"],"names":["module","exports","BASE_URL","initialState","authorized","user","errors","sentence","rootReducer","combineReducers","auth","state","action","type","payload","status","middleware","composeWithDevTools","applyMiddleware","thunk","createStore","FormStyles","StyleSheet","create","container","flex","justifyContent","alignItems","backgroundColor","minHeight","flexGrow","logo","marginBottom","image","width","height","borderRadius","boxShadow","margin","inputBox","padding","fontSize","marginVertical","outline","outlineColor","outlineStyle","outlineWidth","button","paddingVertical","buttonText","fontWeight","color","textAlign","registerContainer","flexDirection","registerText","registerButton","error","warning_wrapper","warning_text","redirect_button","borderWidth","borderColor","noticeText","noticeButton","styles","imageWrapper","borderTopLeftRadius","overflow","titleWrapper","paddingHorizontal","marginTop","descriptionWrapper","linkWrapper","card","display","shadowColor","shadowOpacity","shadowOffset","shadowRadius","elevation","title","description","Card","props","console","log","url","linkURL","View","style","Image","source","uri","resizeMode","Text","length","slice","onPress","Platform","OS","window","open","Linking","openURL","linkName","ExperienceScreen","useState","setFullName","setEmail","useEffect","a","async","AsyncStorage","getItem","token","decoded","jwt_decode","fullName","email","loadProfile","useSelector","Button","navigation","navigate","ScrollView","formSchema","yup","required","password","min","HomeScreen","navData","dispatch","useDispatch","KeyboardAvoidingView","behavior","initialValues","validationSchema","onSubmit","values","authData","fetch","method","headers","body","JSON","stringify","result","json","resultData","success","authAction","then","setItem","Alert","alert","message","catch","err","require","TextInput","placeholder","placeholderTextColor","keyboardType","onChangeText","handleChange","value","onBlur","handleBlur","touched","secureTextEntry","TouchableOpacity","handleSubmit","LogoutScreen","removeItem","RegisterScreen","SkillsScreen","Drawer","createDrawerNavigator","Stack","createStackNavigator","Tab","createBottomTabNavigator","HeaderLeft","useNavigation","MaterialIcons","name","size","openDrawer","homeNavigator","Navigator","screenOptions","headerLeft","Screen","component","registerNavigator","logoutNavigator","skillsNavigator","experienceNavigator","tabNavigator","initialRouteName","barStyle","tabBarOptions","labelStyle","App","store","NavigationContainer"],"mappings":"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","file":"static/js/app.48159db8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.608e4d9d.png\";","export const REGISTER_USER_SUCCESS = \"REGISTER_USER_SUCCESS\";\nexport const REGISTER_USER_FAIL = \"REGISTER_USER_FAIL\";\n\nexport const LOGIN_USER_SUCCESS = \"LOGIN_USER_SUCCESS\";\nexport const LOGIN_USER_FAIL = \"LOGIN_USER_FAIL\";\n\nexport const LOGOUT_USER_SUCCESS = \"LOGOUT_USER_SUCCESS\";\nexport const LOGOUT_USER_FAIL = \"LOGOUT_USER_FAIL\";\n\n\n\n//const BASE_URL = \"http://localhost:3000/api\";\nconst BASE_URL = \"https://nameless-refuge-42185.herokuapp.com\";\n\nexport const registerUser = (authData) => {\n  const { fullName, email, password } = authData;\n  return async (dispatch) => {\n    //benefit: can now make async http request to Register\n    const result = await fetch(`${BASE_URL}/users/register`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        fullName,\n        email,\n        password,\n      }),\n    });\n\n    const resultData = await result.json();\n    if (resultData.success){\n        dispatch({\n            type: REGISTER_USER_SUCCESS,\n            payload: resultData,\n          });\n    } else {\n        dispatch({\n            type: REGISTER_USER_FAIL,\n          });\n    }\n   \n    return resultData;\n\n  };\n};\nexport const logoutUser = () => {\n  //console.log(\"how the hell is that?\")\n  //console.log('dispatch:',dispatch)\n  // dispatch({\n  //   type: LOGOUT_USER_SUCCESS,\n  // });\n  return async (dispatch) => {\n    dispatch({\n        type: LOGOUT_USER_SUCCESS,\n        })\n  }\n}\n\nexport const loginUser = (authData) => {\n  const { email, password } = authData;\n  return async (dispatch) => {\n    //benefit: can now make async http request to Login\n    const result = await fetch(`${BASE_URL}/users/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          email,\n          password,\n        }),\n      });\n  \n      const resultData = await result.json();\n      if(resultData.success){\n        dispatch({\n            type: LOGIN_USER_SUCCESS,\n            payload: resultData,\n          });\n      } else {\n        dispatch({\n            type: LOGIN_USER_FAIL,\n          });\n      }\n      return resultData; //Why?:  so that we have access to it in the dispatch to the action from loginScreen.\n    //\n    \n  };\n};\n","import {\n  LOGIN_USER_FAIL, LOGIN_USER_SUCCESS, LOGOUT_USER_SUCCESS, REGISTER_USER_FAIL, REGISTER_USER_SUCCESS\n} from \"../actions/authAction\";\n\nconst initialState = {\n  authorized:false,\n  user: {},\n  errors: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case REGISTER_USER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        authorized: true\n      };\n      break;\n    case LOGIN_USER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        authorized: true\n      };\n      break;\n      case LOGOUT_USER_SUCCESS:\n        return {\n          ...state,\n          authorized: false\n        };\n        break;\n    case LOGIN_USER_FAIL:\n      return {\n        ...state,\n        errors: true,\n      };\n      break;\n    case REGISTER_USER_FAIL:\n        return {\n          ...state,\n          errors: true,\n        };\n        break;\n    default:\n      break;\n  }\n  return state;\n}\n","import { FETCH_STATUS } from \"../actions/statusAction\";\n\nconst initialState = {\n    authorized:false,\n    sentence:\"oh what fun it is...\",\n  \n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_STATUS:\n      \n      return {\n        ...state,\n        status: action.payload,\n      };\n      break;\n    \n  }\n  return state;\n}\n ","import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport authReducer from './reducers/authReducer';\nimport statusReducer from './reducers/statusReducer';\n\n\nconst rootReducer = combineReducers({\n    auth: authReducer,   status: statusReducer\n})\n\nconst middleware = composeWithDevTools(applyMiddleware(thunk))\n\nexport default createStore(rootReducer,middleware) ","export const FETCH_STATUS = \"FETCH_STATUS\"\n\n//CONVERTS TO \nexport const fetchStatus = () => {\n    return async dispatch => {\n        //logic to fetch data \n       // const result = await fetch('http://newsapi.org/v2/everything?q=tesla&from=2021-01-15&sortBy=publishedAt&apiKey=d0d92986ef7c4030b8f6b3746d3aae17')\n       // const resultData = await result.json();\n       const resultData =\"app status fetched\"\n        dispatch({\n            type: FETCH_STATUS,\n            payload: resultData\n        });\n       \n    }\n}\n\n ","import {\n  StyleSheet\n} from \"react-native\";\n\n\n\nconst FormStyles = StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      backgroundColor: \"#ffffff\",\n      minHeight: \"100%\",\n      flexGrow: 1,\n    },\n    logo: {\n      alignItems: \"center\",\n      marginBottom: 40,\n    },\n    image: {\n      width: 100,\n      height: 100,\n      borderRadius:20,\n      boxShadow:'2px 2px #dddddd',\n      margin:30\n      \n      \n    },\n    inputBox: {\n      width: 300,\n      backgroundColor: \"#B6BFC4\",\n      borderRadius: 25,\n      padding: 16,\n      fontSize: 16,\n      marginVertical: 10,\n      outline:0,\n      outlineColor: 0,\n      outlineStyle: 'none',\n      outlineWidth: 0\n\n    },\n    button: {\n      width: 300,\n      backgroundColor: \"#738289\",\n      borderRadius: 25,\n      marginVertical: 10,\n      paddingVertical: 13,\n    },\n    buttonText: {\n      fontSize: 16,\n      fontWeight: \"500\",\n      color: \"#ffffff\",\n      textAlign: \"center\",\n    },\n    registerContainer: {\n      alignItems: \"flex-end\",\n      justifyContent: \"center\",\n      paddingVertical: 16,\n      flexDirection: \"row\",\n    },\n    registerText: {\n      color: \"#738289\",\n      fontSize: 16,\n    },\n    registerButton: {\n      color: \"#738289\",\n      fontSize: 16,\n      fontWeight: \"bold\",\n    },\n    error: {\n        color: 'red',\n        textAlign: 'center'\n    },\n    warning_wrapper:{\n      flex:1,\n      justifyContent:'center',\n      alignItems:'center'\n    },\n    warning_text: {\n      fontSize:18,\n      margin:30,\n      color:\"#777777\"\n    },\n    redirect_button:{\n      fontSize:40,\n      margin:30,\n      padding:30,\n      borderRadius: 10,\n      borderWidth:1,\n      borderColor:\"#000000\"\n    },\n    noticeText:{\n      margin:15\n    },\n    noticeButton:{\n      margin:15\n    }\n  });\n\nexport default FormStyles;","//import { Ionicons } from '@expo/vector-icons';\nimport React from \"react\";\nimport { Image, Linking, Platform, StyleSheet, Text, View } from \"react-native\";\n//mport * as newsAction from \"../../redux/actions/newsAction\";\n\nconst Card = (props) => {\n  console.log(\"PROPS IN CARD:\", props); //blank until made part of the navigation\n  //eg. the calling jsx needs attribute navigation={props.navigation} ...\n\n  //const dispatch = useDispatch();\n  //some() returns true or false\n  // const isFav = useSelector((state) =>\n  //   state.news.favorites.some((article) => article.url === props.url)\n  // );\n  const defaultImage =\n    \"https://avatars.githubusercontent.com/u/4679115?s=460&v=4\";\n  const url = props.linkURL;\n  return (\n    <View style={styles.card}>\n      <View style={styles.imageWrapper}>\n        <Image\n          source={{ uri: props.image ? props.image : defaultImage }}\n          style={styles.image}\n          resizeMode={props.resizeMode ? props.resizeMode : \"cover\"}\n        />\n      </View>\n      <View style={styles.titleWrapper}>\n        <Text style={styles.title}>\n          {props.title && props.title.length > 24\n            ? props.title.slice(0, 24) + \"...\"\n            : props.title}\n        </Text>\n        {/* <MaterialIcons\n            name={ \"favorite\" }\n            size={24}\n            color=\"black\"\n            onPress={() => {\n              dispatch(newsAction.toggleFavorites(props.url));\n            }}\n          /> */}\n      </View>\n      <View style={styles.descriptionWrapper}>\n        <Text style={styles.description}>\n          {props.description && props.description.length > 300\n            ? props.description.slice(0, 300) + \"...\"\n            : props.description}\n        </Text>\n      </View>\n      <View style={styles.linkWrapper}>\n        <Text\n          style={{ color: \"blue\" }}\n          onPress={(props) => {\n            // const url = \"http://www.forteworks.com/roughest/\";\n            if (Platform.OS == \"web\") {\n              window.open(url, \"_blank\");\n            } else {\n              Linking.openURL(url, \"_blank\");\n            }\n          }}\n        >\n          {props.linkName}\n        </Text>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  imageWrapper: {\n    width: \"100%\",\n    height: \"40%\",\n    borderTopLeftRadius: 10,\n    overflow: \"hidden\",\n  },\n  titleWrapper: {\n    height: \"15%\",\n    paddingHorizontal: 15,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginTop: 3,\n  },\n  descriptionWrapper: {\n    height: \"15%\",\n    paddingHorizontal: 15,\n  },\n  linkWrapper: {\n    height: \"15%\",\n    paddingHorizontal: 15,\n    marginTop: 15,\n  },\n  card: {\n    backgroundColor: \"#ffffff\",\n    minHeight: 500,\n    display: \"flex\",\n    justifyContent:'space-between',\n    flexDirection: \"column\",\n    flex: 1,\n    margin: 20,\n    padding: 10,\n    borderRadius: 10,\n    shadowColor: \"#000000\",\n    shadowOpacity: 0.25,\n    shadowOffset: { width: 0, height: 2 },\n    shadowRadius: 8,\n    elevation: 5,\n  },\n  image: {\n    height: \"100%\",\n    width: \"100%\",\n  },\n  title: {\n    /*fontFamily: 'Ubuntu-Bold',*/\n    fontSize: 20,\n  },\n  description: {\n    //fontFamily: 'Ubuntu',\n    fontSize: 15,\n    marginTop: 15,\n  },\n});\n\nexport default Card;\n","//we want to fetch the token when the page loads\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n//const jwtDecode = require(\"jwt-decode\");\nimport jwt_decode from \"jwt-decode\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, ScrollView, Text, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport FormStyles from \"./FormStyles\";\nimport Card from \"./ui_components/Card\";\nconst styles = FormStyles;\n\nconst ExperienceScreen = (props) => {\n  const [fullName, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const loadProfile = async () => {\n    const token = await AsyncStorage.getItem(\"token\");\n    if (token) {\n      const decoded = jwt_decode(token);\n      //make use of decoded data. useState\n      setFullName(decoded.fullName);\n      setEmail(decoded.email);\n    }\n  };\n\n  useEffect(() => {\n    loadProfile();\n  });\n\n  var auth = useSelector((state) => state.auth.authorized);\n  if (!auth) {\n    return (\n      <View style={styles.warning_wrapper}>\n        <Text style={styles.warning_text}>\n          Sorry, you need to register for an account to see this page.\n        </Text>\n        <Button\n          onPress={() => props.navigation.navigate(\"Register\")}\n          title=\"Register\"\n          style={styles.redirect_button}\n        />\n      </View>\n    );\n  }\n\n  // return (\n  //   <View style={styles.container}>\n  //   <View>\n  //     <Text style={styles.text}>\n  //       Home Screen: Welcome {fullName ? fullName : \"\"}\n  //     </Text>\n  //   </View>\n  //   <View>\n  //     <Text style={styles.text}>Your email is {email ? email : \"\"}</Text>\n  //   </View>\n  // </View>\n  // );\n\n  //const parkseedExperience=\"At Park Seed, I was the lead UI/UX designer managing one other designer. I worked with an e-commerce platform that was built in a proprietary language, and created frontend design features with javascript, html, and css on the front end that was desired by management. One major project was implementing a ‘gifting’ feature and creating a calendar for shipping the gifts.\"\n  //const codigoExperience=`At Codigo I created a digital signage app that would engage customers in the lobby of businesses, to post ‘thoughts’ and ‘images’ in real time according to ‘Campaign Themes’ set up by app administrators.\n  //It featured a backend for admin management , as well as a factory design pattern, designed to handle a variety of ‘animations’ involving the different types of text, images , and background elements that would be featured on screen, all moving at different rates of speed and at varying sizes. It also had a database polling feature which handled the ‘real time’ presentation of new posts. The backend was PHP and MySQL, while the frontend was mainly vanilla javascript and jQuery.`\n\n  //const advancedSolutionsExperience=`At Advanced Solutions I helped convert a variety of websites for their subsidiaries over to Wordpress, so that they could be more easily managed by the marketing department. I also encouraged the use of Docker to maintain a consistent environment for all of the sites.`\n  //const thinkfulExperience=`Thinkful is an online learning resource for modern web development skills. I mentored students in javascript and React. I also graded student work and provided feedback and guidance as to how to complete their tasks. I was pleasantly surprised at the sense of satisfaction I felt helping people learn a new skill to improve their lives.`\n  //const connectExperience=`At Connect I helped design the database schema and defined which technology we would use for our database and API. I’ve handled the server administration , as well as, managing a small group of developers remotely using Trello and BitBucket. We are using MySQL and an ORM called Sequelize that handles the database seeding and migrations. I also am writing the swift code for the iPhone client that will use the service and I will be guiding us through the iTunes store submission and deployment.`\n  //const adderMobileExperience=`Adder Mobile was a start-up. We started from scratch using different technology. I advised them on which technologies would serve us best. We decided on ReactJS for the frontend, NodeJS for the backend, and MongoDB for the database. We then began , at an urgent pace, building their system. With great coordination and teamwork, we had an MVP completed in approximately four months that the sales team was then able to begin explaining the service we had created more clearly to potential customers and investors. I believe the progress we made definitely influenced the investments that we received after the MVP was completed.`\n  //const eltoroExperience=`El Toro hired me just before the covid pandemic struck. They were growing rapidly and try also trying to increase their velocity in the development of a political portal, for targeted advertising, in time for this political season. I helped them make that happen as part of a large team of front end developers working in coordination with a separate API team, and other logistics teams as well. We were using a typescript version of React to create the frontend, along with SASS. I helped create UI tests with Selenium as well as some integration testing with puppeteer.\n  //After that project was completed I started working with another team in Quality Assurance creating API tests in both Postman and SoapUI. I also helped with the ‘automation’ of certain processes in our Atlassian suite mainly with Jira Service Desks, Boards, and Confluence spaces. I started using the ‘Go lang’ because we were using it to handle some of the processes in an AWS lambda. Unfortunately, they needed to downsize and my entire team got let go.`\n  const adderMobileExperience = `At Adder I helped create the frontend for their app using React and an existing react dashboard framework. I also used express API and MongoDB for backend integration. `;\n  const eltoroExperience = `At El Toro I worked with a combination of Typescript React and Puppeteer for testing the frontend. In addition to that I used Selenium for frontend UI testing and spent some time working with Postman for API testing. `;\n  const connectExperience = `At Connect,LLC. I designed the database schema, the express api, set up a server for development on Digital Ocean. I also wrote Swift code for the iOS app and made sure all libraries used were well documented.`;\n  const parkseedExperience = `At Parkseed I was the lead UI/UX developer which mostly involved using javascript to create the additional custom functionality needed for the existing e-commerce framework.`;\n  const advancedSolutionsExperience = `At Advanced Solutions I converted their existing website, including a few of their subsidiaries, into wordpress sites that could be managed more easily by their marketing team. I also helped integrate subscriptions into their wordpress sites. `;\n  const thinkfulExperience = `At Thinkful, I both mentored new students in web development as well as graded a variety of web related assignments. Leaving helpful guidance and advice or praise.`;\n  const codigoExperience = `At Codigo I worked to help integrate interactive content into their existing framework for digital signage using mainly javascript. I also created both a knowledge base specifically for the customer support team.`;\n  return (\n    <ScrollView>\n      <Card\n       resizeMode=\"contain\"\n        title=\"Connect, LLC.\"\n        description={connectExperience}\n        linkURL=\"\"\n      ></Card>\n\n      <Card\n        image=\"https://mk0eltorocomd2iu6ndj.kinstacdn.com/wp-content/uploads/2017/09/web_red.png\"\n        resizeMode=\"contain\"\n        title=\"El Toro\"\n        description={eltoroExperience}\n        linkName=\"El Toro\"\n        linkURL=\"http://eltoro.com\"\n      ></Card>\n\n      <Card\n        image=\"https://tf-shoebill-prod.imgix.net/img/logo.1879aa6.svg\"\n        resizeMode=\"contain\"\n        title=\"Thinkful\"\n        description={thinkfulExperience}\n        linkName=\"Thinkful\"\n        linkURL=\"http://thinkful.com\"\n      ></Card>\n\n      <Card\n        image=\"http://adder.io/assets/images/asset-13x2x-361x129.png\"\n        resizeMode=\"contain\"\n        title=\"Adder Mobile Technology\"\n        description={adderMobileExperience}\n        linkName=\"Adder\"\n        linkURL=\"http://adder.io\"\n      ></Card>\n      <Card\n        image=\"http://cdn.asihub.com/asi/img/logos/advanced-solutions-inc-logo.png\"\n        resizeMode=\"contain\"\n        title=\"Advanced Solutions\"\n        description={advancedSolutionsExperience}\n        linkName=\"Advanced Solutions\"\n        linkURL=\"http://www.advancedsolutions.mobi/\"\n      ></Card>\n      <Card\n        image=\"https://parkseed.com/images/art/Park-Logo-2020.png\"\n        resizeMode=\"contain\"\n        title=\"JPPA Parkseed\"\n        description={parkseedExperience}\n        linkName=\"JPPA Parkseed\"\n        linkURL=\"http://www.parkseed.com\"\n      ></Card>\n      <Card\n        image=\"https://rrb9y3pc0lm4qd0v4tdsxqq9-wpengine.netdna-ssl.com/wp-content/uploads/2020/07/spectrio-logo-violet-cloud-web.svg\"\n        resizeMode=\"contain\"\n        title=\"Codigo\"\n        description={codigoExperience}\n        linkName=\"Codigo\"\n        linkURL=\"https://www.spectrio.com/acquisitions/codigo/\"\n      ></Card>\n    </ScrollView>\n  );\n};\n\nexport default ExperienceScreen;\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\n//npm install formik yup\nimport { Formik } from \"formik\";\nimport React from \"react\";\nimport {\n  Alert,\n  Button, Image,\n  KeyboardAvoidingView,\n  Platform,\n  ScrollView,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View\n} from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as yup from \"yup\";\nimport * as authAction from \"../redux/actions/authAction\";\nimport FormStyles from \"./FormStyles\";\n\nconst formSchema = yup.object({\n  email: yup.string().email().required(),\n  password: yup.string().required().min(6),\n});\n\nconst styles = FormStyles;\n\nconst HomeScreen = (navData) => {\n  const dispatch = useDispatch();\n\n  // Check if already logged in.\n  var auth = useSelector((state) => state.auth.authorized);\n  if (auth) {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.noticeText}>You are already logged in.</Text>\n        <Text style={styles.noticeText}>Do you want to log out?</Text>\n        <Button\n        onPress={() => navData.navigation.navigate(\"Logout\")}\n        title=\"Logout\"\n        style={styles.noticeButton}\n      />\n      </View>\n    );\n  }\n\n  return (\n    <KeyboardAvoidingView\n      behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n      style={{ flex: 1 }}\n    >\n      <ScrollView>\n        <Formik\n          initialValues={{\n            email: \"\",\n            password: \"\",\n          }}\n          validationSchema={formSchema}\n          onSubmit={(values) => {\n            console.log(values);\n            dispatch(authAction.loginUser(values))\n              .then(async (result) => {\n                console.log(result);\n                if (result.success) {\n                  try {\n                    await AsyncStorage.setItem(\"token\", result.token);\n                    navData.navigation.navigate(\"Servewerx\");\n                  } catch (error) {\n                    console.log(error);\n                  }\n                } else {\n                  Alert.alert(result.message);\n                }\n              })\n              .catch((err) => console.log(err));\n          }}\n        >\n          {(props) => (\n            <View style={styles.container}>\n              <View style={styles.logo}>\n                <Image\n                  source={require(\"../assets/icon.png\")}\n                  style={styles.image}\n                />\n              </View>\n              <View>\n                <TextInput\n                  style={styles.inputBox}\n                  placeholder=\"Email\"\n                  placeholderTextColor=\"#fff\"\n                  keyboardType=\"email-address\"\n                  onChangeText={props.handleChange(\"email\")}\n                  value={props.values.email}\n                  onBlur={props.handleBlur(\"email\")}\n                />\n                <Text style={styles.error}>\n                  {props.touched.email && props.errors.email}\n                </Text>\n                <TextInput\n                  style={styles.inputBox}\n                  placeholder=\"Password\"\n                  placeholderTextColor=\"#fff\"\n                  secureTextEntry={true}\n                  onChangeText={props.handleChange(\"password\")}\n                  value={props.values.password}\n                  onBlur={props.handleBlur(\"password\")}\n                  \n                />\n                <Text style={styles.error}>\n                  {props.touched.password && props.errors.password}\n                </Text>\n\n                <TouchableOpacity\n                  style={styles.button}\n                  onPress={props.handleSubmit}\n                >\n                  <Text style={styles.buttonText}>Login</Text>\n                </TouchableOpacity>\n                <View style={styles.registerContainer}>\n                  <Text style={styles.registerText}>\n                    Don't Have an Account?\n                  </Text>\n                  <TouchableOpacity\n                    onPress={() => navData.navigation.navigate(\"Register\")}\n                  >\n                    <Text style={styles.registerButton}>Register</Text>\n                  </TouchableOpacity>\n                </View>\n              </View>\n            </View>\n          )}\n        </Formik>\n      </ScrollView>\n    </KeyboardAvoidingView>\n  );\n};\n\nexport default HomeScreen;\n ","import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport React from \"react\";\nimport { Button, Text, View } from \"react-native\";\nimport { useDispatch } from 'react-redux';\nimport * as authAction from \"../redux/actions/authAction\";\nimport FormStyles from \"./FormStyles\";\n\nconst styles = FormStyles;\n\nfunction LogoutScreen({navigation}) {\n  const dispatch = useDispatch();\n \n  //TODO: need to make auth action to set authorized to false...and remove token from storage.\n  // Then offer direction back to login again.\n  return (\n    <View style={styles.container}>\n      \n       <Text style={styles.noticeText}>Are you sure you want to Logout?</Text>\n      <Button \n      title=\"Logout\"\n      onPress={ () => {\n        \n        dispatch(authAction.logoutUser())\n        .then(async (result) => {\n          console.log(result);\n          try {\n            await AsyncStorage.removeItem(\"token\");\n            console.log(\"success ? \")\n            navigation.navigate(\"Home\");\n          } catch (error) {\n            console.log(error);\n          }\n        })\n        .catch((err) => console.log(err));\n      }\n     \n      }\n      style={styles.noticeButton}\n      />\n    </View>\n  );\n}\nexport default LogoutScreen;\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\n//npm install formik yup\nimport { Formik } from \"formik\";\nimport React from \"react\";\nimport {\n  Alert,\n  Image,\n  KeyboardAvoidingView,\n  Platform,\n  ScrollView,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View\n} from \"react-native\";\nimport { useDispatch } from \"react-redux\";\nimport * as yup from \"yup\";\nimport * as authAction from \"../redux/actions/authAction\";\nimport FormStyles from \"./FormStyles\";\n\nconst styles = FormStyles;\n\nconst formSchema = yup.object({\n  fullName: yup.string().required().min(3),\n  email: yup.string().email().required(),\n  password: yup.string().required().min(6),\n});\nconst RegisterScreen = (navData) => {\n  const dispatch = useDispatch();\n\n  return (\n    <KeyboardAvoidingView\n      behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n      style={{ flex: 1 }}\n    >\n      <ScrollView>\n        <Formik\n          initialValues={{\n            fullName: \"\",\n            email: \"\",\n            password: \"\",\n          }}\n          onSubmit={(values) => {\n            console.log(values);\n            dispatch(authAction.registerUser(values))\n              .then(async (result) => {\n                if (result.success) {\n                  try {\n                    await AsyncStorage.setItem(\"token\", result.token);\n                    navData.navigation.navigate(\"Servewerx\");\n                  } catch (error) {\n                    console.log(error);\n                  }\n                } else {\n                  Alert.alert(\"Registration Failed try again.\");\n                }\n              })\n              .catch((err) => console.log(err));\n          }}\n          validationSchema={formSchema}\n        >\n          {(props) => (\n            <View style={styles.container}>\n              <View style={styles.logo}>\n                <Image\n                  source={require(\"../assets/icon.png\")}\n                  style={styles.image}\n                />\n              </View>\n              <View>\n                <TextInput\n                  style={styles.inputBox}\n                  placeholder=\"Full Name\"\n                  placeholderTextColor=\"#fff\"\n                  onChangeText={props.handleChange(\"fullName\")}\n                  value={props.values.fullName}\n                  onBlur={props.handleBlur(\"fullName\")}\n                />\n                <Text style={styles.error}>\n                  {props.touched.fullName && props.errors.fullName}\n                </Text>\n\n                <TextInput\n                  style={styles.inputBox}\n                  placeholder=\"Email\"\n                  placeholderTextColor=\"#fff\"\n                  keyboardType=\"email-address\"\n                  onChangeText={props.handleChange(\"email\")}\n                  value={props.values.email}\n                  onBlur={props.handleBlur(\"email\")}\n                />\n                <Text style={styles.error}>\n                  {props.touched.email && props.errors.email}\n                </Text>\n                <TextInput\n                  style={styles.inputBox}\n                  placeholder=\"Password\"\n                  placeholderTextColor=\"#fff\"\n                  secureTextEntry={true}\n                  onChangeText={props.handleChange(\"password\")}\n                  value={props.values.password}\n                  onBlur={props.handleBlur(\"password\")}\n                />\n                <Text style={styles.error}>\n                  {props.touched.password && props.errors.password}\n                </Text>\n                <TouchableOpacity\n                  style={styles.button}\n                  onPress={props.handleSubmit}\n                >\n                  <Text style={styles.buttonText}>Register</Text>\n                </TouchableOpacity>\n                <View style={styles.registerContainer}>\n                  <Text style={styles.registerText}>Have an Account?</Text>\n                  <TouchableOpacity\n                    onPress={() => navData.navigation.navigate(\"Login\")}\n                  >\n                    <Text style={styles.registerButton}>Login</Text>\n                  </TouchableOpacity>\n                </View>\n              </View>\n            </View>\n          )}\n        </Formik>\n      </ScrollView>\n    </KeyboardAvoidingView>\n  );\n};\n\nexport default RegisterScreen;\n\n// import React from 'react';\n// import { Button, Text, View } from 'react-native';\n\n// function RegisterScreen({ navigation }) {\n//     return (\n//       <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n//         <Text>Register Form</Text>\n//         <Text>Already Registered?</Text>\n//         <Button onPress={() => navigation.navigate(\"Home\")} title=\"Login\" />\n//       </View>\n//     );\n//   }\n\n//   export default RegisterScreen;\n","//we want to fetch the token when the page loads\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n//const jwtDecode = require(\"jwt-decode\");\nimport jwt_decode from \"jwt-decode\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, ScrollView, Text, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport FormStyles from \"./FormStyles\";\nimport Card from \"./ui_components/Card\";\n\nconst styles = FormStyles;\n\nconst SkillsScreen = (props) => {\n  const [fullName, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const loadProfile = async () => {\n    const token = await AsyncStorage.getItem(\"token\");\n    if (token) {\n      const decoded = jwt_decode(token);\n      //make use of decoded data. useState\n      setFullName(decoded.fullName);\n      setEmail(decoded.email);\n    }\n  };\n\n  useEffect(() => {\n    loadProfile();\n  });\n\n  var auth = useSelector((state) => state.auth.authorized);\n  if (!auth) {\n    return (\n      <View style={styles.warning_wrapper}>\n        <Text style={styles.warning_text}>\n          Sorry, you need to register for an account to see this page.\n        </Text>\n        <Button\n          onPress={() => props.navigation.navigate(\"Register\")}\n          title=\"Register\"\n          style={styles.redirect_button}\n        />\n      </View>\n    );\n  }\n  const skillsDescription = `My primary focus now is on react-native. My goal is to both get work primarily using it and to create my own applications. I've had ten years of experience with a variety of technology, including Javascript, PHP, MySQL, javascript, css, Docker, GoLang, Swift, various frameworks, but now I believe it is time to really focus on one area. I feel like react native gives me the best of both mobile and web development and it has great potential. `\n  return (\n    <ScrollView>\n       <Card\n        image=\"\"\n        resizeMode=\"contain\"\n        title=\"Skills\"\n        description={skillsDescription}\n        linkName=\"\"\n        linkURL=\"\"\n      ></Card>\n      \n      <Card\n        image=\"http://www.forteworks.com/forteworks-16.9.19/games/images/spaceshooter.jpg\"\n        resizeMode=\"contain\"\n        title=\"Games\"\n        description=\"A set of games created with Panda.js, which I customized while working at Codigo, to fit both the customer branding specifications and to handle gesture recognition.\"\n        linkName=\"Games\"\n        linkURL=\"http://www.forteworks.com/forteworks-16.9.19/games/index-games.php\"\n      ></Card>\n\n      <Card\n        image=\"http://www.forteworks.com/forte_2017.5.14/img/rough_est.png\"\n        resizeMode=\"contain\"\n        title=\"Estimation App\"\n        description=\"An app I created to learn about web apps with offline capabilities, using vanilla javascript. It lets you calculate tasks and materials into an estimate of work. While it is not beautiful, it is definitely functional.\"\n        linkName=\"Estimation App\"\n        linkURL=\"http://www.forteworks.com/roughest/\"\n      ></Card>\n\n      \n    </ScrollView>\n \n  );\n};\n\nexport default SkillsScreen;\n\n/*\nGames:\nhttp://www.forteworks.com/forteworks-16.9.19/games/index-games.php\n\nRough Est: \nhttps://drive.google.com/file/d/0B6WIP-y6MAiEYm11b1hQN1Z0Sms/view\nhttp://www.forteworks.com/roughest/\n\n*/\n","import { MaterialIcons } from \"@expo/vector-icons\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { NavigationContainer, useNavigation } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport ExperienceScreen from \"./screens/ExperienceScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport LogoutScreen from './screens/LogoutScreen';\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport SkillsScreen from \"./screens/SkillsScreen\";\nconst Drawer = createDrawerNavigator();\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nconst HeaderLeft = () => {\n  const navigation = useNavigation();\n  return (\n    <MaterialIcons\n      name=\"menu\"\n      size={24}\n      onPress={() => {\n        navigation.openDrawer();\n      }}\n    />\n  );\n};\n\nconst HeaderRight = () => {\n  const navigation = useNavigation();\n  return (\n    <MaterialIcons\n      name=\"login\"\n      size={24}\n      onPress={() => {\n        navigation.navigate(\"Logout\");\n      }}\n    />\n  );\n};\n\nfunction homeNavigator() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerLeft: () => <HeaderLeft />,\n        \n      }}\n    >\n      <Stack.Screen name=\"servewerx.com\" component={HomeScreen} />\n    </Stack.Navigator>\n  );\n}\n\nfunction registerNavigator() {\n  return (\n    <Stack.Navigator\n    screenOptions={{\n      headerLeft: () => <HeaderLeft />,\n    }}\n    >\n      <Stack.Screen name=\"Register\" component={RegisterScreen} />\n    </Stack.Navigator>\n  );\n}\n\n\n \nfunction logoutNavigator() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerLeft: () => <HeaderLeft />,\n      }}\n    >\n      <Stack.Screen name=\"Logout\" component={LogoutScreen} />\n    </Stack.Navigator>\n  );\n}\n \nfunction skillsNavigator() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerLeft: () => <HeaderLeft />,\n      }}\n    >\n      <Stack.Screen name=\"Skills\" component={SkillsScreen} />\n    </Stack.Navigator>\n  );\n}\n\nfunction experienceNavigator() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerLeft: () => <HeaderLeft />,\n      }}\n    >\n      <Stack.Screen name=\"Experience\" component={ExperienceScreen} />\n    </Stack.Navigator>\n  );\n}\nfunction tabNavigator() {\n  return (\n    <Tab.Navigator\n      initialRouteName=\"Skills\"\n      barStyle={{marginBottom:30,fontSize:40}}\n      tabBarOptions={\n        {\n          labelStyle: {\n            fontSize:30,\n            padding:15\n          }\n        }\n      }\n    >\n      <Tab.Screen name=\"Skills\" component={skillsNavigator} />\n      <Tab.Screen name=\"Experience\" component={experienceNavigator} />\n    </Tab.Navigator>\n  );\n}\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <NavigationContainer>\n        <Drawer.Navigator initialRouteName=\"Login\">\n          \n          <Drawer.Screen name=\"Servewerx\" component={tabNavigator} />\n          <Drawer.Screen name=\"Login\" component={homeNavigator} />\n          <Drawer.Screen name=\"Register\" component={registerNavigator} />\n          <Drawer.Screen name=\"Logout\" component={logoutNavigator} />\n        </Drawer.Navigator>\n      </NavigationContainer>\n    </Provider>\n  );\n}\n\n \n"],"sourceRoot":""}